name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [next, qa]
    tags: ['v*']

jobs:
  tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - uses: actions/checkout@v4
    - uses: mamba-org/setup-micromamba@v1
      with:
        environment-file: environment.yml
        cache-environment-key: ${{ runner.os }}-env-${{ hashFiles('**/environment.yml') }}
        cache-downloads-key: ${{ runner.os }}-downloads-${{ hashFiles('**/environment.yml') }}
        condarc: |
          channels:
            - mcvine
            - conda-forge
    - name: pre-commit
      run: pre-commit run --all-files
    - name: Install histogram
      run: python -m pip install -e .
    - name: Run tests
      run:  python -m pytest --log-cli-level=INFO  --cov=src --cov-report=xml --cov-report=term
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: neutrons/histogram-dev

  conda-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - uses: actions/checkout@v4
    - uses: mamba-org/setup-micromamba@v1
      with:
        environment-file: environment.yml
        cache-environment-key: ${{ runner.os }}-env-${{ hashFiles('**/environment.yml') }}
        cache-downloads-key: ${{ runner.os }}-downloads-${{ hashFiles('**/environment.yml') }}
        condarc: |
          channels:
            - mcvine
            - conda-forge
    - name: build python wheel
      shell: bash -l {0}
      run: |
        python -m build --wheel --no-isolation
        check-wheel-contents dist/histogram*.whl
    - name: build conda package
      run: |
        # set up environment
        cd conda.recipe
        echo "versioningit $(versioningit ../)"
        # build the package
        CHANNELS="--channel mcvine --channel conda-forge"
        VERSION=$(versioningit ../) conda mambabuild $CHANNELS --output-folder . .
        conda verify noarch/histogram*.tar.bz2
    - name: upload conda package to anaconda
      shell: bash -l {0}
      if: startsWith(github.ref, 'refs/tags/v')
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        IS_RC: ${{ contains(github.ref, 'rc') }}
      run: |
        # label is main or rc depending on the tag-name
        CONDA_LABEL="main"
        if [ "${IS_RC}" = "true" ]; then CONDA_LABEL="rc"; fi
        echo pushing ${{ github.ref }} with label $CONDA_LABEL
        anaconda upload --label $CONDA_LABEL conda.recipe/noarch/histogram*.tar.bz2
